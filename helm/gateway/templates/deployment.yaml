apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      run: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        run: {{ .Release.Name }}
    spec:
      containers:
        - name: nginx
          image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
          imagePullPolicy: {{ .Values.image.nginx.pullPolicy }}
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /check
              port: 80
          readinessProbe:
            httpGet:
              path: /check
              port: 80
          env:
            - name: APP_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: appHost
            - name: AUTH_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: authHost
            - name: BILLING_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: billingHost
            - name: POSITION_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: positionHost
            - name: MODELS_MANAGER_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: modelsManagerHost
            - name: MODEL_ENGINE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: modelEngineHost
            - name: PUSH_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: pushHost
            - name: WEB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: webHost
            - name: RC_WEB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: rcWebHost
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: redisHost
            - name: MAPS_N_MAGIC_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: mapsNMagicHost

        - name: gateway
          image: "{{ .Values.image.gateway.repository }}:{{ .Values.image.gateway.tag }}"
          imagePullPolicy: {{ .Values.image.gateway.pullPolicy }}
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /debug
              port: 8080
          readinessProbe:
            httpGet:
              path: /debug
              port: 8080
          env:
            - name: APP_PORT
              value: "8080"
            - name: AUTH_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: authHost
            - name: POSITION_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: positionHost
            - name: PUSH_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: pushHost
            - name: MODEL_ENGINE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: modelEngineHost
            - name: MODELS_MANAGER_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: modelsManagerHost
            - name: BILLING_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: billingHost
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: redisHost
            - name: POSITION_CACHE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: positionCache
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: web2
                  key: jwtSecret
            - name: SECRET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: secret
